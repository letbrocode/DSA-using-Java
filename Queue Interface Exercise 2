import java.util.Deque;
import java.util.ArrayDeque;

class Tester {
    
    public static Deque<Integer> changeSmallest(Deque<Integer> inputStack) {
        if (inputStack.isEmpty()) {
            return inputStack;
        }
        
        // Step 1: Find the smallest element and calculate sumOfStack
        int minValue = Integer.MAX_VALUE;
        int sumOfStack = 0;
        
        for (Integer num : inputStack) {
            sumOfStack += num;
            if (num < minValue) {
                minValue = num;
            }
        }
        
        // Step 2: Replace occurrences of minValue with sumOfStack
        int size = inputStack.size();
        for (int i = 0; i < size; i++) {
            Integer current = inputStack.pop();
            if (current == minValue) {
                inputStack.push(sumOfStack);
            } else {
                inputStack.push(current);
            }
        }
        
        return inputStack;
    }

    public static void main(String[] args) {
        Deque<Integer> inputStack = new ArrayDeque<>();
        inputStack.push(10);
        inputStack.push(8);
        inputStack.push(5);
        inputStack.push(12);
        inputStack.push(5);
        
        Deque<Integer> updatedStack = changeSmallest(inputStack);
        
        System.out.println("Stack After Modification:");
        for (Integer value : updatedStack) {
            System.out.println(value);
        }
    }
}
